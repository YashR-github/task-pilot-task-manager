spring.application.name=TaskPilot_TaskManager
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://localhost:3306/ToDOApplicationPersonal
spring.datasource.username=root
spring.datasource.password=${MYSQL_ROOT_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql: true
jwt.secret=${JWT_SECRET}
jwt.expirationMs=86400000

#--------------- notification config below----------------------------------------
# toggle Kafka usage (true for local dev event-driven flow)
use.kafka=false

# choose email provider when use.kafka=false or consumer triggers send directly
# allowed: sendgrid, smtp
email.provider=smtp
# can use smtp or sendgrid above(switchable)

# Kafka (only used when use.kafka=true)
spring.kafka.bootstrap-servers=localhost:9092
notification.email.topic=notification-email-topic
#Replacement for kafka config
spring.kafka.consumer.group-id=email-consumer-group
spring.kafka.consumer.auto-offset-reset=earliest
# Consumer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=org.example.codetodoapplicationpersonal.notifications.dtos
# Producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer




# SendGrid (API method)
sendgrid.api.key=${SENDGRID_API_KEY}
sendgrid.from.email=noreply.taskpilot.task.manager@gmail.com

# SMTP (JavaMailSender) - used when email.provider=smtp
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=noreply.taskpilot.task.manager@gmail.com
spring.mail.password=${SPRINGMAIL_GMAIL_APP_PASS}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# scheduling (optional)
spring.task.scheduling.pool.size=10

